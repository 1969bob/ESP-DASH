(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{351:function(e,a,r){e.exports=r.p+"assets/img/concept-diagram.164040a8.png"},363:function(e,a,r){"use strict";r.r(a);var t=r(42),s=Object(t.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"concept"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#concept"}},[e._v("#")]),e._v(" Concept")]),e._v(" "),t("p",[e._v("The whole concept of ESP-DASH is around the idea of having 'Cards' and 'Charts' ( UI components ) on our dashboard. Therefore with V3, we divided the whole library into 3 separate classes:")]),e._v(" "),t("ol",[t("li",[t("strong",[e._v("ESPDash")]),e._v(" ( ESPDash.h )")]),e._v(" "),t("li",[t("strong",[e._v("Card")]),e._v(" ( Card.h )")]),e._v(" "),t("li",[t("strong",[e._v("Chart")]),e._v(" ( Chart.h )")])]),e._v(" "),t("p",{attrs:{align:"center"}},[t("img",{attrs:{src:r(351),alt:"Concept Diagram",width:"400px"}})]),e._v(" "),t("p",[e._v("All of these classes serve their very own purpose and work harmoniously with a low heap footprint. Let's know more about the function of each class:")]),e._v(" "),t("h4",{attrs:{id:"_1-espdash-class-reference"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-espdash-class-reference"}},[e._v("#")]),e._v(" 1. ESPDash Class ("),t("RouterLink",{attrs:{to:"/reference/espdash.html"}},[e._v("Reference")]),e._v(")")],1),e._v(" "),t("p",[e._v("ESPDash class handles the networking part of our dashboard. It takes AsyncWebServer as a argument and connects itself to serve DASH V3 webpage from our MCU's program memory. This class is responsible for the transfer of card/chart data between webpage and your sketch.")]),e._v(" "),t("h4",{attrs:{id:"_2-card-class-reference"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-card-class-reference"}},[e._v("#")]),e._v(" 2. Card Class ("),t("RouterLink",{attrs:{to:"/reference/card.html"}},[e._v("Reference")]),e._v(")")],1),e._v(" "),t("p",[e._v("Our dashboard comprises of 'Cards' & 'Charts' and in our library, these are primarly data handling classes. Their main purpose is just to store data in their relevant position.")]),e._v(" "),t("p",[e._v("Card comprises of many sub-types ( for example: generic, temperature, humidity etc. ) which provides you with a great diversity of data visiualization choices.")]),e._v(" "),t("h4",{attrs:{id:"_3-chart-class-reference"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-chart-class-reference"}},[e._v("#")]),e._v(" 3. Chart Class ("),t("RouterLink",{attrs:{to:"/reference/chart.html"}},[e._v("Reference")]),e._v(")")],1),e._v(" "),t("p",[e._v("Similar to Card Class, Chart handles the data for creating charts on our dashboard.")])])}),[],!1,null,null,null);a.default=s.exports}}]);